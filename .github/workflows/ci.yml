name: CI

permissions:
  contents: write

on:
  push:
    branches: [master]
    tags:
      - '*'
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run tests
        run: pytest --cov=talks_reducer --cov-report=xml

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  pyinstaller:
    strategy:
      matrix:
        os:
          - windows-latest
          - macos-latest
    runs-on: ${{ matrix.os }}
    needs: test
    if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/codex/add-windows-setup-installer-for-talks-reducer'

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install runtime dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r scripts/requirements-pyinstaller.txt
        shell: bash

      - name: Build GUI executable
        run: bash scripts/build-gui.sh --clean --zip
        shell: bash

      - name: Rename macOS artifact
        if: matrix.os == 'macos-latest'
        run: |
          set -euo pipefail
          shopt -s nullglob
          for archive in dist/talks-reducer.app-*.zip; do
            mv "$archive" "${archive/talks-reducer.app/talks-reducer-macos.app}"
          done
        shell: bash

      - name: Upload PyInstaller artifact
        uses: actions/upload-artifact@v4
        with:
          name: talks-reducer-${{ matrix.os }}
          path: dist/*.zip

  release:
    runs-on: ubuntu-latest
    needs:
      - test
      - pyinstaller
      - inno
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install build

      - name: Build distributions
        run: python -m build

      - name: Download PyInstaller binaries
        uses: actions/download-artifact@v4
        with:
          pattern: talks-reducer-*
          merge-multiple: true
          path: gui-dist

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: talks-reducer-dist
          path: dist/

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
            gui-dist/*.zip
            gui-dist/*.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  inno:
    runs-on: windows-latest
    needs:
      - pyinstaller
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Download Windows PyInstaller artifact
        uses: actions/download-artifact@v4
        with:
          name: talks-reducer-windows-latest
          path: pyinstaller-dist

      - name: Extract PyInstaller bundle
        shell: pwsh
        run: |
          $zip = Get-ChildItem -Path pyinstaller-dist -Filter *.zip | Select-Object -First 1
          if (-not $zip) {
            throw "PyInstaller zip artifact not found in pyinstaller-dist"
          }
          $destination = Join-Path $PWD 'dist'
          New-Item -ItemType Directory -Force -Path $destination | Out-Null
          Expand-Archive -LiteralPath $zip.FullName -DestinationPath $destination -Force
          Write-Host "ðŸ“¦ Extracted $($zip.Name) to $destination"
          Get-ChildItem -Path $destination -Recurse

      - name: Install Inno Setup
        run: choco install innosetup -y
        shell: powershell

      - name: Build Windows installer
        run: pwsh scripts/build-installer.ps1

      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: talks-reducer-inno-installer
          path: dist/*.exe
